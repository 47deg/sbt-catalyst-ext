language: scala
dist: xenial

matrix:
  include:
    - scala: 2.12.9
      jdk: openjdk8
      env:
      - SBT_VERSION=1.2.8

before_cache:
  - du -h -d 2 $HOME/.sbt/
  - du -h -d 1 $HOME/.ivy2/
  - du -h -d 4 $HOME/.coursier/
  - find $HOME/.sbt -name "*.lock" -type f -delete
  - find $HOME/.ivy2/cache -name "ivydata-*.properties" -type f -delete
  - find $HOME/.coursier/cache -name "*.lock" -type f -delete

cache:
  directories:
    - $HOME/.sbt/1.0
    - $HOME/.sbt/boot
    - $HOME/.sbt/cache
    - $HOME/.sbt/launchers
    - $HOME/.ivy2/cache
    - $HOME/.coursier

before_install:
  - if [ "$TRAVIS_BRANCH" = "signing" -a "$TRAVIS_PULL_REQUEST" = "false" ]; then
      openssl aes-256-cbc -K $encrypted_7c61f7d7bb76_key -iv $encrypted_7c61f7d7bb76_iv
      -in secring.gpg.enc -out secring.gpg -d;
      mkdir -p ~/.gnupg
      cp ./*ring.gpg ~/.gnupg
    fi
  - rm -rf $HOME/.ivy2/cache/scala_2.12/sbt_1.0/com.47deg/sbt-org-policies

script:
  - sbt ^^$SBT_VERSION publishLocalSigned

after_success:
  - if [ "$TRAVIS_BRANCH" = "master" -a "$TRAVIS_PULL_REQUEST" = "false" ]; then
      if grep -q "SNAPSHOT" version.sbt; then
        sbt ^^$SBT_VERSION publish;
      else
        sbt ^^$SBT_VERSION orgUpdateDocFiles;
        git reset --hard HEAD;
        git clean -f;
        git checkout master;
        git pull origin master;
        sbt ^^$SBT_VERSION release;
      fi
    fi
  - sbt ^^$SBT_VERSION publishLocal
