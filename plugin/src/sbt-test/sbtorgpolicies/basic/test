# check that the sbt-org-policies plugin works on a minimal cross-versioned project

> orgCreateFiles

$ exists target/scala-2.12/resource_managed/org-policies/templates

$ exists AUTHORS.md

$ exists CHANGELOG.md

$ exists CONTRIBUTING.md

$ exists LICENSE

$ exists NOTICE.md

$ exists README.md

$ exists version.sbt

$ exists .travis.yml

> orgValidateFiles

> set scalaVersion:=sbtorgpolicies.model.scalac.`2.11`

> set crossScalaVersions:=Seq(sbtorgpolicies.model.scalac.`2.12`)

> testCheckSettings

> set crossScalaVersions:=Seq(sbtorgpolicies.model.scalac.`2.11`,sbtorgpolicies.model.scalac.`2.12`)

> testCheckSettings

> set crossScalaVersions:=Seq(sbtorgpolicies.model.scalac.`2.10`,sbtorgpolicies.model.scalac.`2.11`,sbtorgpolicies.model.scalac.`2.12`)

> testCheckSettings

> set scoverage.ScoverageKeys.coverageMinimum:=50

> testCheckSettings

> set scalaVersion:=sbtorgpolicies.model.scalac.`2.12`

> set scoverage.ScoverageKeys.coverageMinimum:=80

> orgCheckSettings

> set de.heikoseeberger.sbtheader.HeaderPlugin.autoImport.headerMappings:=Map.empty

> testCheckSettings

> set de.heikoseeberger.sbtheader.HeaderPlugin.autoImport.headerMappings:=Map(de.heikoseeberger.sbtheader.HeaderPlugin.autoImport.HeaderFileType.scala -> de.heikoseeberger.sbtheader.HeaderPlugin.autoImport.HeaderCommentStyle.CStyleBlockComment, de.heikoseeberger.sbtheader.HeaderPlugin.autoImport.HeaderFileType.java  -> de.heikoseeberger.sbtheader.HeaderPlugin.autoImport.HeaderCommentStyle.CStyleBlockComment)

> set de.heikoseeberger.sbtheader.HeaderPlugin.autoImport.headerLicense:=None

> testCheckSettings

> set de.heikoseeberger.sbtheader.HeaderPlugin.autoImport.headerLicense:=Some(de.heikoseeberger.sbtheader.HeaderPlugin.autoImport.HeaderLicense.ALv2(replaceableYear(startYear.value), "47 Degrees, LLC. <http://www.47deg.com>"))

> orgCheckSettings